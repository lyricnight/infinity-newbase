package club.lyric.infinity.impl.modules.exploit;

import club.lyric.infinity.api.event.bus.EventHandler;
import club.lyric.infinity.api.module.Category;
import club.lyric.infinity.api.module.ModuleBase;
import club.lyric.infinity.api.setting.settings.BooleanSetting;
import club.lyric.infinity.api.setting.settings.ModeSetting;
import club.lyric.infinity.api.setting.settings.NumberSetting;
import club.lyric.infinity.api.util.client.math.StopWatch;
import club.lyric.infinity.api.util.client.nulls.Null;
import club.lyric.infinity.impl.events.mc.movement.EntityMovementEvent;
import club.lyric.infinity.impl.events.network.PacketEvent;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.network.packet.c2s.play.ClientCommandC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerActionC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerInteractItemC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import net.minecraft.network.packet.s2c.play.PlayerPositionLookS2CPacket;

import java.text.DecimalFormat;

/**
 * @author vasler
 * this sucks lol -lyric
 * delete this or im doing it
 */
@SuppressWarnings({"unused"})
public final class FastProjectile extends ModuleBase {

    public ModeSetting mode = new ModeSetting("Mode", this, "Normal", "Normal", "Alternative");
    public NumberSetting charge = new NumberSetting("Charge", this, 5.0, 0, 20.0, 1.0f);
    public NumberSetting offset = new NumberSetting("Offset", this, 1.0, 0, 3.0, 1.0f);
    public BooleanSetting noRotate = new BooleanSetting("NoRotate", true, this);
    public BooleanSetting autoStop = new BooleanSetting("AutoStop", true, this);
    private final StopWatch.Single stopWatch = new StopWatch.Single();

    public FastProjectile() {
        super("FastProjectile", "Gives projectiles an extremely strong velocity.", Category.Exploit);
    }

    @EventHandler
    public void onMovement(EntityMovementEvent event) {
        int useTime = mc.player.getItemUseTimeLeft();

        if (autoStop.value() && mc.player.getMainHandStack().getItem() == Items.BOW && useTime > 0) {
            event.setX(0);
            event.setZ(0);
        }
    }

    @EventHandler
    public void onPacketSend(PacketEvent.Send event) {

        if (Null.is()) return;

        if (!stopWatch.hasBeen(charge.getIValue() * 1000L)) return;

        if (event.getPacket() instanceof PlayerActionC2SPacket && ((PlayerActionC2SPacket) event.getPacket()).getAction() == PlayerActionC2SPacket.Action.RELEASE_USE_ITEM) {

            if (!(mc.player.getMainHandStack().getItem() == Items.BOW || mc.player.getMainHandStack().getItem() == Items.TRIDENT || mc.player.getMainHandStack().getItem() == Items.CROSSBOW))
                return;

            projectileVelocity();
            stopWatch.reset();

        } else if (event.getPacket() instanceof PlayerInteractItemC2SPacket) {
            ItemStack itemStack = mc.player.getStackInHand(((PlayerInteractItemC2SPacket) event.getPacket()).getHand());

            if (!(itemStack.getItem() == Items.ENDER_PEARL || itemStack.getItem() == Items.SNOWBALL || itemStack.getItem() == Items.EGG))
                return;

            projectileVelocity();
            stopWatch.reset();
        }
    }

    protected void projectileVelocity() {

        send(new ClientCommandC2SPacket(mc.player, ClientCommandC2SPacket.Mode.START_SPRINTING));

        for (int i = 0; i < offset.getIValue() * 100; ++i) {
            if (mode.is("Normal")) {

                send(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() - 1.0e-10, mc.player.getZ(), true));
                send(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() + 1.0e-10, mc.player.getZ(), false));

            } else if (mode.is("Alternative")) {

                send(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX() + 1.57e-6, mc.player.getY() + 1.57e-9, mc.player.getZ() + 1.57e-6, false));
                send(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX() + 1.57e-7, mc.player.getY() + 1.57e-10, mc.player.getZ() + 1.57e-7, true));


            }
        }
    }

    @EventHandler
    public void onPacketReceive(PacketEvent.Receive event) {
        if (event.getPacket() instanceof PlayerPositionLookS2CPacket && noRotate.value()) {
            event.setCancelled(true);
        }
    }

    @Override
    public String moduleInformation() {

        if (stopWatch.hasBeen(charge.getIValue() * 1000L))
            return "Finished";

        DecimalFormat format = new DecimalFormat("0");
        return format.format(stopWatch.getTimePoint());
    }
}
