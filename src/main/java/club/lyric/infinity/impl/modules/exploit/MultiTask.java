package club.lyric.infinity.impl.modules.exploit;

import club.lyric.infinity.api.module.Category;
import club.lyric.infinity.api.module.ModuleBase;
import net.minecraft.util.Hand;
import net.minecraft.util.hit.BlockHitResult;
import net.minecraft.util.hit.EntityHitResult;

/**
 * @author valser
 */
@SuppressWarnings("ConstantConditions")
public class MultiTask extends ModuleBase {
    public MultiTask() {
        super("MultiTask", "Allows you to do two things at once.", Category.Exploit);
    }

    @Override
    public void onTickPre() {
        if (isBlockHit() && isAttackKeyPressed() && !isBlockAir()) {
            BlockHitResult blockHitResult = (BlockHitResult) mc.crosshairTarget;

            mc.interactionManager.attackBlock(blockHitResult.getBlockPos(), blockHitResult.getSide());
            mc.player.swingHand(Hand.MAIN_HAND);
        }

        if (isEntityHit() && isAttackKeyPressed() && isAttackCoolDownReady()) {
            EntityHitResult entityHitResult = (EntityHitResult) mc.crosshairTarget;

            mc.interactionManager.attackEntity(mc.player, entityHitResult.getEntity());
            mc.player.swingHand(Hand.MAIN_HAND);
        }
    }

    private boolean isBlockHit() {
        return mc.crosshairTarget instanceof BlockHitResult;
    }

    private boolean isAttackKeyPressed() {
        return mc.options.attackKey.isPressed();
    }

    private boolean isBlockAir() {
        BlockHitResult blockHitResult = (BlockHitResult) mc.crosshairTarget;

        return mc.world.getBlockState(blockHitResult.getBlockPos()).isAir();
    }

    private boolean isEntityHit() {
        return mc.crosshairTarget instanceof EntityHitResult;
    }

    private boolean isAttackCoolDownReady() {
        return mc.player.getAttackCooldownProgress(0.5f) > 0.6f;
    }
}
