package club.lyric.infinity.impl.modules.exploit;

import club.lyric.infinity.api.event.bus.EventHandler;
import club.lyric.infinity.api.module.Category;
import club.lyric.infinity.api.module.ModuleBase;
import club.lyric.infinity.api.util.client.math.StopWatch;
import club.lyric.infinity.asm.accessors.IPlayerMoveC2SPacket;
import club.lyric.infinity.impl.events.network.PacketEvent;
import net.minecraft.network.packet.c2s.play.PlayerInteractBlockC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import net.minecraft.util.hit.HitResult;
import net.minecraft.world.RaycastContext;

/**
 * @author vasler
 * tf is this - lyric
 */
public final class RaytraceBypass extends ModuleBase {

    float pitch = -91.0f;
    StopWatch.Single stopWatch = new StopWatch.Single();

    public RaytraceBypass() {
        super("RaytraceBypass", "Allows you to hit behind walls on raytraced servers.", Category.Exploit);
    }

    @EventHandler
    public void onPacketSend(PacketEvent.Send event) {

        if (event.getPacket() instanceof PlayerInteractBlockC2SPacket packet) {

            if (stopWatch.hasBeen(250L) && mc.world.raycast(new RaycastContext(mc.player.getCameraPosVec(1.0F), packet.getBlockHitResult().getPos(), RaycastContext.ShapeType.COLLIDER, RaycastContext.FluidHandling.NONE, mc.player)).getType() == HitResult.Type.BLOCK && mc.world.raycast(new RaycastContext(mc.player.getCameraPosVec(1.0F), packet.getBlockHitResult().getPos().add(0.0D, 0.15D, 0.0D), RaycastContext.ShapeType.COLLIDER, RaycastContext.FluidHandling.NONE, mc.player)).getType() == HitResult.Type.BLOCK) {

                pitch = -75.0f;
                stopWatch.reset();

            }

        } else if (event.getPacket() instanceof PlayerMoveC2SPacket packet) {

            if (pitch != -91.0f) {

                ((IPlayerMoveC2SPacket) packet).setPitch(pitch);
                pitch = -91.0f;

            }
        }
    }
}
