package club.lyric.infinity.impl.modules.exploit;

import club.lyric.infinity.api.event.bus.EventHandler;
import club.lyric.infinity.api.module.Category;
import club.lyric.infinity.api.module.ModuleBase;
import club.lyric.infinity.api.util.client.math.StopWatch;
import club.lyric.infinity.asm.accessors.IPlayerMoveC2SPacket;
import net.minecraft.network.packet.Packet;
import net.minecraft.network.packet.c2s.play.PlayerInteractBlockC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;

public class RaytraceBypass extends ModuleBase {

    //valser what the FUCK is this lmfao
    private final StopWatch.Single timer = new StopWatch.Single();

    protected float pitch = -91;

    public RaytraceBypass() {
        super("RaytraceBypass", "bypassing raytracing server", Category.Exploit);
    }

    @SuppressWarnings("DataFlowIssue")
    @EventHandler
    public void onPacket(Packet<?> packet) {
        if(packet instanceof PlayerInteractBlockC2SPacket && timer.hasBeen(250)) {
            if(mc.world.isSpaceEmpty(mc.player.getBoundingBox().stretch(0, .15, 0))) {
                pitch = -75;
                timer.reset();
            }
        }

        if(packet instanceof PlayerMoveC2SPacket movePacket && pitch != -91) {
            ((IPlayerMoveC2SPacket) movePacket).setPitch(pitch);
            pitch = -91;
        }
    }
}
